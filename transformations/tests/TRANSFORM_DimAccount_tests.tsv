# design test artefact			
# ARTEFACT: TRANSFORM_DimAccount_tests			
# DESCRIPTION: Test each transformation rule			
SOURCE_SELECTION_CRITERIA	DESTINATION_SELECTION_CRITERIA	TEST	DESCRIPTION
REUSE_SQL	"FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id LEFT JOIN lumo.nc_credit_control_status ON nc_credit_control_status.seq_credit_status_id = nc_client.seq_int_crd_chk_id LEFT JOIN lumo.nc_inv_deliver_mode ON nc_inv_deliver_mode.seq_inv_del_mode_id = nc_client.seq_inv_del_mode_id INNER JOIN (SELECT nc_client.seq_party_id, MAX (CASE WHEN utl_account_status.accnt_status_class_id = '2' THEN 1 ELSE 0 END) AS StatusOpen, MAX (CASE WHEN utl_account_status.accnt_status_class_id = '3' THEN 1 ELSE 0 END) AS StatusPending, MAX (CASE WHEN utl_account_status.accnt_status_class_id = '4' THEN 1 ELSE 0 END) AS StatusError, MAX (CASE WHEN nc_client.Meta_LatestUpdate_TaskExecutionInstanceId >= -1 OR nc_product.Meta_LatestUpdate_TaskExecutionInstanceId >= -1 OR nc_product_item.Meta_LatestUpdate_TaskExecutionInstanceId >= -1 THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].nc_client LEFT OUTER JOIN [schema].nc_product ON nc_product.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN [schema].nc_product_item ON nc_product_item.seq_product_id = nc_product.seq_product_id LEFT OUTER JOIN [schema].utl_account_status ON utl_account_status.accnt_status_id = nc_product_item.accnt_status_id GROUP BY nc_client.seq_party_id) AS _accountStatus ON _accountStatus.seq_party_id = nc_client.seq_party_id WHERE (crm_party.Meta_LatestUpdate_TaskExecutionInstanceId >= -1 OR nc_client.Meta_LatestUpdate_TaskExecutionInstanceId >= -1 OR _accountStatus.Meta_HasChanged = 1)"		
[REUSE_SQL]		source.length.should.equal(destination.length)	row counts should match
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	parseInt(source[0].party_code).should.equal(destination[0].AccountCode)	1:1 map rule plus int cast
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	parseInt(source[0].seq_party_id).should.equal(destination[0].AccountKey)	1:1 map rule plus int cast
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].postal_addr_1.should.equal(destination[0].PostalAddressLine1)	1:1 map rule
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].postal_addr_2.should.equal(destination[0].PostalSuburb)	1:1 map rule
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].postal_post_code.should.equal(destination[0].PostalPostcode)	1:1 map rule
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].postal_addr_3.should.equal(destination[0].PostalState.trim())	1:1 map rule plus trim
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].insert_datetime.getFullYear().should.equal(destination[0].CreationDate.getFullYear())	1:1 map rule
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].insert_datetime.getMonth().should.equal(destination[0].CreationDate.getMonth())	1:1 map rule
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	((source[0].cz_registered == 'Y') ? 'Registered' : 'Not Registered').should.equal(destination[0].MyAccountStatus)	1:1 map rule (Not Registered)
[REUSE_SQL] AND party_code = '1704517'	WHERE AccountCode = '1704517'	((source[0].cz_registered == 'Y') ? 'Registered' : 'Not Registered').should.equal(destination[0].MyAccountStatus)	1:1 map rule (Registered)
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	'Closed'.should.equal(destination[0].AccountStatus.trim())	1:1 map rule (manually defined) plus trim
[REUSE_SQL] AND party_code = '1704517'	WHERE AccountCode = '1704517'	'Open'.should.equal(destination[0].AccountStatus.trim())	1:1 map rule (manually defined) plus trim
[REUSE_SQL] AND party_code = '1840601'	WHERE AccountCode = '1840601'	'Pending'.should.equal(destination[0].AccountStatus.trim())	1:1 map rule (manually defined) plus trim
[REUSE_SQL] AND party_code = '1704463'	WHERE AccountCode = '1704463'	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	1:1 map rule (Cheque)
[REUSE_SQL] AND party_code = '1840609'	WHERE AccountCode = '1840609'	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	1:1 map rule (Direct Debit)
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	1:1 map rule (Direct Credit)
[REUSE_SQL] AND party_code = '1840519'	WHERE AccountCode = '1840519'	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	1:1 map rule (Credit Card)
[REUSE_SQL] AND party_code = '1704459'	WHERE AccountCode = '1704459'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Email Spreadsheet)
[REUSE_SQL] AND party_code = '1704608'	WHERE AccountCode = '1704608'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Mail)
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Fax)
[REUSE_SQL] AND party_code = '1840519'	WHERE AccountCode = '1840519'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Online eBill)
[REUSE_SQL] AND party_code = '1840601'	WHERE AccountCode = '1840601'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Online eBill - SMS)
[REUSE_SQL] AND party_code = '1705150'	WHERE AccountCode = '1705150'	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	1:1 map rule (Body Corporate)
[REUSE_SQL] AND party_code = '1840601'	WHERE AccountCode = '1840601'	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	1:1 map rule (Account Under Disconnected)
[REUSE_SQL] AND party_code = '1705145'	WHERE AccountCode = '1705145'	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	1:1 map rule (Government Assistance Programme)
