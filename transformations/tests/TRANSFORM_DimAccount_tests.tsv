# design test artefact			
# ARTEFACT: TRANSFORM_DimAccount_tests			
# DESCRIPTION: Test each transformation rule			
SOURCE_SELECTION_CRITERIA	DESTINATION_SELECTION_CRITERIA	TEST	DESCRIPTION
REUSE_SQL	"FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = nc_client.seq_party_id AND crm_element_hierarchy.seq_element_type_id IN (8,9) INNER JOIN (SELECT nc_client.seq_party_id, MIN(nc_product_item.accnt_status_date) AS MinAccountStatusDate, MAX (nc_product_item.accnt_status_date) AS MaxAccountStatusDate, MAX (CASE WHEN utl_account_status.accnt_status_class_id = '2' THEN 1 ELSE 0 END) AS StatusOpen, MAX (CASE WHEN utl_account_status.accnt_status_class_id = '3' THEN 1 ELSE 0 END) AS StatusPending, MAX (CASE WHEN utl_account_status.accnt_status_class_id = '4' THEN 1 ELSE 0 END) AS StatusError, MAX (CASE WHEN nc_client.Meta_LatestUpdate_TaskExecutionInstanceId >= -2 OR nc_product.Meta_LatestUpdate_TaskExecutionInstanceId >= -2 OR nc_product_item.Meta_LatestUpdate_TaskExecutionInstanceId >= -2 THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].nc_client LEFT OUTER JOIN [schema].nc_product ON nc_product.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN [schema].nc_product_item ON nc_product_item.seq_product_id = nc_product.seq_product_id LEFT OUTER JOIN [schema].utl_account_status ON utl_account_status.accnt_status_id = nc_product_item.accnt_status_id GROUP BY nc_client.seq_party_id) AS _accountStatus ON _accountStatus.seq_party_id = nc_client.seq_party_id LEFT JOIN [schema].nc_credit_control_status ON nc_credit_control_status.seq_credit_status_id = nc_client.seq_credit_status_id LEFT JOIN [schema].CreditControlCategory AS _CreditControlCategory ON _CreditControlCategory.seq_credit_status_id = nc_client.seq_credit_status_id  LEFT JOIN [schema].nc_inv_deliver_mode ON nc_inv_deliver_mode.seq_inv_del_mode_id = nc_client.seq_inv_del_mode_id LEFT JOIN [schema].nc_billing_cycle ON nc_billing_cycle.seq_bill_cycle_id = nc_client.seq_bill_cycle_id  INNER JOIN [schema].crm_district ON crm_district.district_id = nc_client.district_id WHERE (crm_party.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR nc_client.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _accountStatus.Meta_HasChanged = 1)"		
[REUSE_SQL]		source.length.should.equal(destination.length)	row counts should match
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	parseInt(source[0].seq_party_id).should.equal(destination[0].AccountKey)	1:1 map rule plus int cast
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	parseInt(source[0].party_code).should.equal(destination[0].AccountCode)	1:1 map rule plus int cast
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	source[0].postal_addr_1.should.equal(destination[0].PostalAddressLine1)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	source[0].postal_addr_2.should.equal(destination[0].PostalSuburb)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	source[0].postal_post_code.should.equal(destination[0].PostalPostcode)	1:1 map rule
[REUSE_SQL] AND `nc_client.seq_party_id` = '2101657'	WHERE `AccountKey` = '2101657'	should.not.exist(destination[0].PostalState)	Should not exist from DQ filter
[REUSE_SQL] AND `nc_client.seq_party_id` = '2102891'	WHERE `AccountKey` = '2102891'	source[0].postal_addr_3.should.equal(destination[0].PostalState.trim())	1:1 map rule plus trim
[REUSE_SQL] AND `nc_client.seq_party_id` = '2102891'	WHERE `AccountKey` = '2102891'	source[0].postal_addr_3.should.equal(destination[0].PostalStateAsProvided.trim())	1:1 map rule plus trim
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	'Closed'.should.equal(destination[0].AccountStatus.trim())	1:1 map rule (manually defined) plus trim
[REUSE_SQL] AND nc_client.seq_party_id = '2101756'	WHERE AccountKey = '2101756'	'Open'.should.equal(destination[0].AccountStatus.trim())	1:1 map rule (manually defined) plus trim
[REUSE_SQL] AND nc_client.seq_party_id = '2341539'	WHERE AccountKey = '2341539'	'Pending'.should.equal(destination[0].AccountStatus.trim())	1:1 map rule (manually defined) plus trim
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	source[0].insert_datetime.getFullYear().should.equal(destination[0].AccountCreationDate.getFullYear())	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	source[0].insert_datetime.getMonth().should.equal(destination[0].AccountCreationDate.getMonth())	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	parseInt('2011').should.equal(destination[0].AccountClosedDate.getFullYear())	
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	parseInt('7').should.equal(destination[0].AccountClosedDate.getMonth())	
[REUSE_SQL] AND nc_client.seq_party_id = '2341539'	WHERE AccountKey = '2341539'	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	1:1 map rule (Credit Collect)
[REUSE_SQL] AND nc_client.seq_party_id = '2102881'	WHERE AccountKey = '2102881'	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	1:1 map rule (Standard)
[REUSE_SQL] AND nc_client.seq_party_id = '2102881'	WHERE AccountKey = '2102881'	source[0].CreditControlCategory.should.equal(destination[0].CreditControlCategory)	
[REUSE_SQL] AND nc_client.seq_party_id = '2101657'	WHERE AccountKey = '2101657'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Ebill)
[REUSE_SQL] AND nc_client.seq_party_id = '2101974'	WHERE AccountKey = '2101974'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Email)
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	1:1 map rule (Mail)
[REUSE_SQL] AND nc_client.seq_party_id = '2101651'	WHERE AccountKey = '2101651'	(source[0].seq_pay_method_id == 17 ? 'Direct Credit' : source[0].seq_pay_method_id == 14 ? 'Cheque' : source[0].seq_pay_method_id == 18 ? 'Direct Debit' : source[0].seq_pay_method_id == 22 ? 'Credit Card' : 'UNKNOWN').should.equal(destination[0].PaymentMethod)	1:1 map rule (Cheque)
[REUSE_SQL] AND nc_client.seq_party_id = '2341545'	WHERE AccountKey = '2341545'	(source[0].seq_pay_method_id == 17 ? 'Direct Credit' : source[0].seq_pay_method_id == 14 ? 'Cheque' : source[0].seq_pay_method_id == 18 ? 'Direct Debit' : source[0].seq_pay_method_id == 22 ? 'Credit Card' : 'UNKNOWN').should.equal(destination[0].PaymentMethod)	1:1 map rule (Direct Debit)
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	(source[0].seq_pay_method_id == 17 ? 'Direct Credit' : source[0].seq_pay_method_id == 14 ? 'Cheque' : source[0].seq_pay_method_id == 18 ? 'Direct Debit' : source[0].seq_pay_method_id == 22 ? 'Credit Card' : 'UNKNOWN').should.equal(destination[0].PaymentMethod)	1:1 map rule (Direct Credit)
[REUSE_SQL] AND nc_client.seq_party_id = '2341387'	WHERE AccountKey = '2341387'	(source[0].seq_pay_method_id == 17 ? 'Direct Credit' : source[0].seq_pay_method_id == 14 ? 'Cheque' : source[0].seq_pay_method_id == 18 ? 'Direct Debit' : source[0].seq_pay_method_id == 22 ? 'Credit Card' : 'UNKNOWN').should.equal(destination[0].PaymentMethod)	1:1 map rule (Credit Card)
[REUSE_SQL] AND nc_client.seq_party_id = '2102891'	WHERE AccountKey = '2102891'	((source[0].cz_registered == 'Y') ? 'Registered' : 'Not Registered').should.equal(destination[0].MyAccountStatus)	1:1 map rule (Not Registered)
[REUSE_SQL] AND nc_client.seq_party_id = '2101756'	WHERE AccountKey = '2101756'	((source[0].cz_registered == 'Y') ? 'Registered' : 'Not Registered').should.equal(destination[0].MyAccountStatus)	1:1 map rule (Registered)
[REUSE_SQL] AND nc_client.seq_party_id = '2341539'	WHERE AccountKey = '2341539'	source[0].user_defined_1.should.equal(destination[0].ACN)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '1944222'	WHERE AccountKey = '1944222'	source[0].user_defined_2.should.equal(destination[0].ABN)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '1944222'	WHERE AccountKey = '1944222'	((source[0].seq_element_type_id == '9') ? 'Residential' : (source[0].seq_element_type_id == '8') ? 'Business' : 'NULL').should.equal(destination[0].AccountType.trim())	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '1944222'	WHERE AccountKey = '1944222'	source[0].district_code.should.equal(destination[0].DistrictState.trim())	1:1 map rule plus trim
