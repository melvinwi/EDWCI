# transformation test result artefact
# ARTEFACT: TRANSFORM_DimAccount
# CREATED DATE: 2014-08-28T113927

2014-08-28 11:39:28	2	PASSED	source.length.should.equal(destination.length)	{"obj":9,"params":{"operator":"to be","expected":9,"showDiff":true},"negate":false}
2014-08-28 11:39:28	3	PASSED	parseInt(source[0].party_code).should.equal(destination[0].AccountCode)	{"obj":1705150,"params":{"operator":"to be","expected":1705150,"showDiff":true},"negate":false}
2014-08-28 11:39:28	4	PASSED	parseInt(source[0].seq_party_id).should.equal(destination[0].AccountKey)	{"obj":2102891,"params":{"operator":"to be","expected":2102891,"showDiff":true},"negate":false}
2014-08-28 11:39:28	5	PASSED	source[0].postal_addr_1.should.equal(destination[0].PostalAddressLine1)	{"obj":"20 Fake Avenue","params":{"operator":"to be","expected":"20 Fake Avenue","showDiff":true},"negate":false}
2014-08-28 11:39:28	6	PASSED	source[0].postal_addr_2.should.equal(destination[0].PostalSuburb)	{"obj":"MARLESTON","params":{"operator":"to be","expected":"MARLESTON","showDiff":true},"negate":false}
2014-08-28 11:39:28	7	PASSED	source[0].postal_post_code.should.equal(destination[0].PostalPostcode)	{"obj":"5033","params":{"operator":"to be","expected":"5033","showDiff":true},"negate":false}
2014-08-28 11:39:28	8	PASSED	source[0].postal_addr_3.should.equal(destination[0].PostalState.trim())	{"obj":"SA","params":{"operator":"to be","expected":"SA","showDiff":true},"negate":false}
2014-08-28 11:39:28	9	PASSED	source[0].insert_datetime.getFullYear().should.equal(destination[0].CreationDate.getFullYear())	{"obj":2011,"params":{"operator":"to be","expected":2011,"showDiff":true},"negate":false}
2014-08-28 11:39:28	10	PASSED	source[0].insert_datetime.getMonth().should.equal(destination[0].CreationDate.getMonth())	{"obj":7,"params":{"operator":"to be","expected":7,"showDiff":true},"negate":false}
2014-08-28 11:39:28	11	PASSED	((source[0].cz_registered == 'Y') ? 'Registered' : 'Not Registered').should.equal(destination[0].MyAccountStatus)	{"obj":"Not Registered","params":{"operator":"to be","expected":"Not Registered","showDiff":true},"negate":false}
2014-08-28 11:39:28	12	PASSED	((source[0].cz_registered == 'Y') ? 'Registered' : 'Not Registered').should.equal(destination[0].MyAccountStatus)	{"obj":"Registered","params":{"operator":"to be","expected":"Registered","showDiff":true},"negate":false}
2014-08-28 11:39:28	13	PASSED	'Closed'.should.equal(destination[0].AccountStatus.trim())	{"obj":"Closed","params":{"operator":"to be","expected":"Closed","showDiff":true},"negate":false}
2014-08-28 11:39:28	14	PASSED	'Open'.should.equal(destination[0].AccountStatus.trim())	{"obj":"Open","params":{"operator":"to be","expected":"Open","showDiff":true},"negate":false}
2014-08-28 11:39:29	15	PASSED	'Pending'.should.equal(destination[0].AccountStatus.trim())	{"obj":"Pending","params":{"operator":"to be","expected":"Pending","showDiff":true},"negate":false}
2014-08-28 11:39:29	16	PASSED	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	{"obj":"Cheque","params":{"operator":"to be","expected":"Cheque","showDiff":true},"negate":false}
2014-08-28 11:39:29	17	PASSED	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	{"obj":"Direct Debit","params":{"operator":"to be","expected":"Direct Debit","showDiff":true},"negate":false}
2014-08-28 11:39:29	18	PASSED	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	{"obj":"Direct Credit","params":{"operator":"to be","expected":"Direct Credit","showDiff":true},"negate":false}
2014-08-28 11:39:29	19	PASSED	((source[0].seq_pay_method_id == 17) ? 'Direct Credit' : ((source[0].seq_pay_method_id == 14) ? 'Cheque' : ((source[0].seq_pay_method_id == 18) ? 'Direct Debit' : ((source[0].seq_pay_method_id == 22) ? 'Credit Card' : 'UNKNOWN' ) ) )    ).should.equal(destination[0].PaymentMethod)	{"obj":"Credit Card","params":{"operator":"to be","expected":"Credit Card","showDiff":true},"negate":false}
2014-08-28 11:39:29	20	PASSED	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	{"obj":"Online EBILL","params":{"operator":"to be","expected":"Online EBILL","showDiff":true},"negate":false}
2014-08-28 11:39:29	21	PASSED	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	{"obj":"Email Spreadsheet","params":{"operator":"to be","expected":"Email Spreadsheet","showDiff":true},"negate":false}
2014-08-28 11:39:29	22	PASSED	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	{"obj":"Mail","params":{"operator":"to be","expected":"Mail","showDiff":true},"negate":false}
2014-08-28 11:39:29	23	PASSED	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	{"obj":"Mail","params":{"operator":"to be","expected":"Mail","showDiff":true},"negate":false}
2014-08-28 11:39:29	24	PASSED	source[0].inv_del_mode_desc.should.equal(destination[0].InvoiceDeliveryMethod)	{"obj":"Fax","params":{"operator":"to be","expected":"Fax","showDiff":true},"negate":false}
2014-08-28 11:39:29	25	PASSED	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	{"obj":"Body Corporate","params":{"operator":"to be","expected":"Body Corporate","showDiff":true},"negate":false}
2014-08-28 11:39:30	26	PASSED	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	{"obj":"Account Under Disconnected","params":{"operator":"to be","expected":"Account Under Disconnected","showDiff":true},"negate":false}
2014-08-28 11:39:30	27	PASSED	source[0].seq_credit_status_desc.should.equal(destination[0].CreditControlStatus)	{"obj":"Government Assistance Programme","params":{"operator":"to be","expected":"Government Assistance Programme","showDiff":true},"negate":false}
