# design test artefact			
# ARTEFACT: TRANSFORM_FactUsagePricePlan_Gas_tests			
# DESCRIPTION: Test each transformation rule			
SOURCE_SELECTION_CRITERIA	DESTINATION_SELECTION_CRITERIA	TEST	DESCRIPTION
REUSE_SQL	"FROM /* Staging */ [schema].utl_account_price_plan INNER JOIN /* Staging */ [schema].nc_product_item ON nc_product_item.seq_product_item_id = utl_account_price_plan.seq_product_item_id INNER JOIN /* Staging */ [schema].nc_product ON nc_product.seq_product_id = nc_product_item.seq_product_id INNER JOIN staticDims.DimAccount AS _DimAccount ON _DimAccount.AccountKey = nc_product.seq_party_id AND _DimAccount.Meta_IsCurrent = 1 INNER JOIN staticDims.DimService AS _DimService ON _DimService.ServiceKey = CAST (nc_product_item.site_id AS int) AND _DimService.Meta_IsCurrent = 1 INNER JOIN (SELECT nc_product_item.seq_product_item_id, CASE WHEN nc_product_item.tco_id <> 1 THEN CAST (nc_product_item.tco_id AS nvarchar (100)) WHEN utl_contract_term.contract_term_desc = 'Lumo Express'OR utl_contract_term.contract_term_desc = 'Lumo Express 2012' THEN 'Lumo Express'WHEN utl_contract_term.contract_term_desc = 'Lumo Velocity' THEN 'Lumo Velocity'WHEN utl_contract_term.contract_term_desc = 'Lumo Virgin Staff' THEN 'Lumo Virgin Staff'WHEN utl_contract_term.contract_term_desc = 'Lumo Movers' THEN 'Lumo Movers'WHEN utl_contract_term.contract_term_desc = 'Lumo Basic' THEN 'Lumo Basic'WHEN _pricePlan.green_percent = '0.1' THEN 'Lumo Life 10'WHEN _pricePlan.green_percent = '1' THEN 'Lumo Life 100'WHEN LEFT (_pricePlan.price_plan_code, 3) IN ('OCC', 'STD') THEN 'Lumo Options'ELSE 'Lumo Advantage'END AS ProductKey, CASE WHEN nc_product_item.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR utl_contract_term.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _pricePlan.Meta_HasChanged = 1 THEN 1 ELSE 0 END AS Meta_HasChanged FROM /* Staging */ [schema].nc_product_item LEFT JOIN /* Staging */ [schema].utl_contract_term ON utl_contract_term.contract_term_id = nc_product_item.contract_term_id LEFT JOIN (SELECT utl_account_price_plan.seq_product_item_id, utl_price_plan.price_plan_id, utl_price_plan.price_plan_code, utl_price_plan.green_percent, CASE WHEN utl_account_price_plan.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR utl_price_plan.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR utl_price_category.Meta_LatestUpdate_TaskExecutionInstanceId > -2 THEN 1 ELSE 0 END AS Meta_HasChanged, row_number() OVER (PARTITION BY utl_account_price_plan.seq_product_item_id ORDER BY utl_account_price_plan.start_date DESC) AS recency FROM /* Staging */ [schema].utl_account_price_plan INNER JOIN /* Staging */ [schema].utl_price_plan ON utl_price_plan.price_plan_id = utl_account_price_plan.price_plan_id LEFT JOIN /* Staging */ [schema].utl_price_category ON utl_price_category.price_category_id = utl_price_plan.price_category_id WHERE (utl_account_price_plan.end_date IS NULL OR utl_account_price_plan.end_date > GETDATE ()) AND utl_account_price_plan.start_date < GETDATE ()) AS _pricePlan ON _pricePlan.seq_product_item_id = nc_product_item.seq_product_item_id AND _pricePlan.recency = 1) AS _productKey ON _productKey.seq_product_item_id = nc_product_item.seq_product_item_id LEFT JOIN staticDims.DimProduct AS _DimProduct ON _DimProduct.ProductKey = _productKey.ProductKey AND _DimProduct.Meta_IsCurrent = 1 LEFT JOIN staticDims.DimPricePlan AS _DimPricePlan ON _DimPricePlan.PricePlanKey = N'USAGE.' + CAST(utl_account_price_plan.price_plan_id AS nvarchar(10)) + N'.G'AND _DimPricePlan.Meta_IsCurrent = 1 INNER JOIN /* Staging */ [schema].utl_meter ON utl_meter.site_id = nc_product_item.site_id INNER JOIN staticDims.DimMeterRegister AS _DimMeterRegister ON _DimMeterRegister.MeterRegisterKey = utl_meter.meter_id AND _DimMeterRegister.Meta_IsCurrent = 1 INNER JOIN /* Staging */ [schema].utl_price_plan ON utl_price_plan.price_plan_id = utl_account_price_plan.price_plan_id LEFT JOIN /* Staging */ [schema].utl_account_status ON utl_account_status.accnt_status_id = nc_product_item.accnt_status_id WHERE nc_product.seq_product_type_id = 3 AND utl_price_plan.seq_product_type_id = 3 AND (utl_account_price_plan.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR nc_product.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR nc_product_item.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _productKey.Meta_HasChanged = 1 OR utl_account_status.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _DimAccount.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _DimService.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _DimProduct.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _DimPricePlan.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _DimMeterRegister.Meta_LatestUpdate_TaskExecutionInstanceId > -2)"		
[REUSE_SQL]		source.length.should.equal(destination.length)	row counts should match
