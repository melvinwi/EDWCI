# design test artefact			
# ARTEFACT: TRANSFORM_DimCustomer_Business_tests			
# DESCRIPTION: Test each transformation rule			
SOURCE_SELECTION_CRITERIA	DESTINATION_SELECTION_CRITERIA	TEST	DESCRIPTION
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1)		source.length.should.equal(destination.length)	row counts should match
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	parseInt(source[0].party_code).should.equal(destination[0].CustomerCode)	1:1 map rule plus int cast
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	parseInt(source[0].seq_party_id).should.equal(destination[0].CustomerKey)	1:1 map rule plus int cast
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	should.not.exist(destination[0].Title)	null test
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].first_name.should.equal(destination[0].Firstname)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	should.not.exist(destination[0].MiddleInitial)	null test
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].last_name.should.equal(destination[0].LastName)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].party_name.should.equal(destination[0].PartyName)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].postal_addr_1.should.equal(destination[0].PostalAddressLine1)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].postal_addr_2.should.equal(destination[0].PostalSuburb)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].postal_post_code.should.equal(destination[0].PostalPostcode)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].postal_addr_3.should.equal(destination[0].PostalState.trim())	1:1 map rule plus trim
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].street_addr_1.should.equal(destination[0].ResidentialAddressLine1)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	source[0].street_addr_2.should.equal(destination[0].ResidentialSuburb)	1:1 map rule
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	"source[0].street_addr_3.substring(0,3).should.equal(destination[0].ResidentialState.trim())"	1:1 map rule plus trim and substring
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	(source[0].std_code+source[0].phone_no).should.equal(destination[0].PrimaryPhone)	1:1 map rule plus concat
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	((source[0].primary_phone_type_id == '1') ? 'Landline' : (source[0].primary_phone_type_id == '2') ? 'Mobile' : 'NULL').should.equal(destination[0].PrimaryPhoneType.trim())	1:1 map rule plus trim
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	should.not.exist(destination[0].SecondaryPhoneType)	1:1 map rule plus trim (null)
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	'0412123456'.should.equal(destination[0].MobilePhone.trim())	1:1 map rule plus trim (manually defined)
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	should.not.exist(destination[0].Email)	null test
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	should.not.exist(destination[0].DateOfBirth)	null test
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	((source[0].seq_element_type_id == '9') ? 'Residential' : (source[0].seq_element_type_id == '8') ? 'Business' : 'NULL').should.equal(destination[0].CustomerType.trim())	1:1 map rule plus trim
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	'Inactive'.should.equal(destination[0].CustomerStatus.trim())	1:1 map rule plus trim (manually defined)
FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN [schema].contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN [schema].customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_ChangeFlag = 1 THEN 1 ELSE 0 END) AS Meta_ChangeFlag FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code WHERE crm_element_hierarchy.seq_element_type_id = '8' AND _contacts.RC = '1' AND (crm_party.Meta_ChangeFlag = 1 OR nc_client.Meta_ChangeFlag = 1 OR crm_element_hierarchy.Meta_ChangeFlag = 1 OR _customerStatus.Meta_ChangeFlag = 1 OR _ombudsmanComplaints.Meta_ChangeFlag = 1) AND crm_party.party_code = '1840601' 	WHERE `CustomerCode` = '1840601'	'Yes'.should.equal(destination[0].OmbudsmanComplaints.trim())	1:1 map rule plus trim (manually defined)
