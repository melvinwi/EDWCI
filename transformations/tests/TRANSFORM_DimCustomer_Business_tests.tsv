# design test artefact			
# ARTEFACT: TRANSFORM_DimCustomer_Business_tests			
# DESCRIPTION: Test each transformation rule			
SOURCE_SELECTION_CRITERIA	DESTINATION_SELECTION_CRITERIA	TEST	DESCRIPTION
REUSE_SQL	"FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN (SELECT crm_element_hierarchy.element_id, crm_element_hierarchy.parent_id, crm_party.title, crm_party.first_name, crm_party.initials, crm_party.last_name, crm_party.date_of_birth, ROW_NUMBER () OVER (PARTITION BY crm_element_hierarchy.parent_id ORDER BY crm_element_hierarchy.element_id ASC) AS RC FROM [schema].crm_element_hierarchy INNER JOIN [schema].crm_party ON crm_party.seq_party_id = crm_element_hierarchy.element_id INNER JOIN [schema].crm_party_flag ON crm_party_flag.seq_party_id = crm_party.seq_party_id WHERE crm_element_hierarchy.active = 'Y' AND crm_element_hierarchy.element_struct_code = 'CONTACT' AND crm_party_flag.seq_party_flag_type_id = '1') AS _contacts ON _contacts.parent_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT nc_client.seq_party_id, MAX (CASE WHEN utl_account_status.accnt_status_class_id = 2 THEN 1 ELSE 0 END) AS CustomerStatus, MAX (CASE WHEN nc_client.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR nc_product.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR nc_product_item.Meta_LatestUpdate_TaskExecutionInstanceId > -2 THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].nc_client LEFT OUTER JOIN [schema].nc_product ON nc_product.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN [schema].nc_product_item ON nc_product_item.seq_product_id = nc_product.seq_product_id LEFT OUTER JOIN [schema].utl_account_status ON utl_account_status.accnt_status_id = nc_product_item.accnt_status_id GROUP BY nc_client.seq_party_id) AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_LatestUpdate_TaskExecutionInstanceId > -2 THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated >= DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman) AS _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code LEFT OUTER JOIN (SELECT nc_client.seq_party_id, MIN(ISNULL(nc_product.voice_ver_date,'9999-12-31')) AS EarliestVVDate, MAX (CASE WHEN nc_client.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR nc_product.Meta_LatestUpdate_TaskExecutionInstanceId > -2 THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].nc_client LEFT OUTER JOIN [schema].nc_product ON nc_product.seq_party_id = nc_client.seq_party_id GROUP BY nc_client.seq_party_id) AS _joinDate ON _joinDate.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN /* Lookup */ [schema].Gender AS _Gender ON _Gender.FirstName = LTRIM(RTRIM(_contacts.first_name)) WHERE crm_element_hierarchy.seq_element_type_id = '8'AND _contacts.RC = '1'AND (crm_party.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR nc_client.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR crm_element_hierarchy.Meta_LatestUpdate_TaskExecutionInstanceId > -2 OR _customerStatus.Meta_HasChanged = 1 OR _ombudsmanComplaints.Meta_HasChanged = 1 OR _joinDate.Meta_HasChanged = 1)"		
[REUSE_SQL]		source.length.should.equal(destination.length)	row counts should match
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	parseInt(source[0].seq_party_id).should.equal(destination[0].CustomerKey)	1:1 map rule plus int cast
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	parseInt(source[0].party_code).should.equal(destination[0].CustomerCode)	1:1 map rule plus int cast
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	should.not.exist(destination[0].Title)	null test
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].first_name.should.equal(destination[0].Firstname)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	should.not.exist(destination[0].MiddleInitial)	null test
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].last_name.should.equal(destination[0].LastName)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].party_name.should.equal(destination[0].PartyName)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].postal_addr_1.should.equal(destination[0].PostalAddressLine1)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].postal_addr_2.should.equal(destination[0].PostalSuburb)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].postal_post_code.should.equal(destination[0].PostalPostcode)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].postal_addr_3.should.equal(destination[0].PostalState.trim())	1:1 map rule plus trim
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].street_addr_1.should.equal(destination[0].ResidentialAddressLine1)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].street_addr_2.should.equal(destination[0].ResidentialSuburb)	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	"source[0].street_addr_3.substring(0,3).should.equal(destination[0].ResidentialState.trim())"	1:1 map rule plus trim and substring
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	(source[0].std_code+source[0].phone_no).should.equal(destination[0].PrimaryPhone)	1:1 map rule plus concat
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	((source[0].primary_phone_type_id == '1') ? 'Landline' : (source[0].primary_phone_type_id == '2') ? 'Mobile' : 'NULL').should.equal(destination[0].PrimaryPhoneType.trim())	1:1 map rule plus trim
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	should.not.exist(destination[0].SecondaryPhoneType)	1:1 map rule plus trim (null)
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	'0412123456'.should.equal(destination[0].MobilePhone.trim())	1:1 map rule plus trim (manually defined)
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	should.not.exist(destination[0].Email)	null test
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	should.not.exist(destination[0].DateOfBirth)	null test
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	((source[0].seq_element_type_id == '9') ? 'Residential' : (source[0].seq_element_type_id == '8') ? 'Business' : 'NULL').should.equal(destination[0].CustomerType.trim())	1:1 map rule plus trim
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	'Inactive'.should.equal(destination[0].CustomerStatus.trim())	1:1 map rule plus trim (manually defined)
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	'Yes'.should.equal(destination[0].OmbudsmanComplaints.trim())	1:1 map rule plus trim (manually defined)
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].insert_datetime.getFullYear().should.equal(destination[0].CreationDate.getFullYear())	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	source[0].insert_datetime.getMonth().should.equal(destination[0].CreationDate.getMonth())	1:1 map rule
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	"'Wed Mar 14 2012 11:00:00'.should.equal(destination[0].JoinDate.toString().substring(0,24))"	1:1 map rule (manually defined)
[REUSE_SQL] AND nc_client.seq_party_id = '2341539' 	WHERE `CustomerKey` = '2341539'	((source[0].promo_allowed == 'E') ? 'Preferred contact by email' : (source[0].promo_allowed == 'P') ? 'Preferred contact by phone' : (source[0].promo_allowed == 'Y') ? 'Preferred contact by mail' :  (source[0].promo_allowed == 'N') ? 'Privacy: Do Not Contact' : 'NULL').should.equal(destination[0].PrivacyPreferredStatus)	1:1 map rule
