# design artefact				
# ARTEFACT: TRANSFORM_DimCustomer_Business				
# DESCRIPTION: Promote business customers from Orion tables to DataStore 				
SOURCE_FUNCTION_PREFIX	SOURCE	SOURCE_FUNCTION_SUFFIX	DESTINATION	DESCRIPTION
WITH_STATEMENTS	"WITH contacts AS (SELECT crm_element_hierarchy.element_id, crm_element_hierarchy.parent_id, crm_party.title, crm_party.first_name, crm_party.initials, crm_party.last_name, crm_party.date_of_birth, ROW_NUMBER () OVER (PARTITION BY crm_element_hierarchy.parent_id ORDER BY crm_element_hierarchy.element_id ASC) AS RC FROM [schema].crm_element_hierarchy INNER JOIN [schema].crm_party ON crm_party.seq_party_id = crm_element_hierarchy.element_id INNER JOIN [schema].crm_party_flag ON crm_party_flag.seq_party_id = crm_party.seq_party_id WHERE crm_element_hierarchy.active = 'Y' AND crm_element_hierarchy.element_struct_code = 'CONTACT' AND crm_party_flag.seq_party_flag_type_id = '1') , customerStatus AS (SELECT nc_client.seq_party_id, MAX (CASE WHEN utl_account_status.accnt_status_class_id = 2 THEN 1 ELSE 0 END) AS CustomerStatus, MAX (CASE WHEN nc_client.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID OR nc_product.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID OR nc_product_item.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].nc_client LEFT OUTER JOIN [schema].nc_product ON nc_product.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN [schema].nc_product_item ON nc_product_item.seq_product_id = nc_product.seq_product_id LEFT OUTER JOIN [schema].utl_account_status ON utl_account_status.accnt_status_id = nc_product_item.accnt_status_id GROUP BY nc_client.seq_party_id), ombudsmanComplaints AS (SELECT Complaint.ClientId, Complaint.IsOmbudsman, MAX(CASE WHEN Complaint.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].Complaint WHERE Complaint.IsOmbudsman = 1 AND Complaint.DateCreated > DATEADD(year, -1, GETDATE()) GROUP BY Complaint.ClientId, Complaint.IsOmbudsman), joinDate AS (SELECT nc_client.seq_party_id, MIN(ISNULL(nc_product.voice_ver_date,'9999-12-31')) AS EarliestVVDate, MAX (CASE WHEN nc_client.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID OR nc_product.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID THEN 1 ELSE 0 END) AS Meta_HasChanged FROM [schema].nc_client LEFT OUTER JOIN [schema].nc_product ON nc_product.seq_party_id = nc_client.seq_party_id GROUP BY nc_client.seq_party_id)"			Contacts temporary table selects the first billing contact for each account and status temporary table provides a binary value for active or inactive and ombudsman complaint temporary table provides the party codes with ombudsman complaints
CAST(	nc_client.seq_party_id	AS int)	DimCustomer.CustomerKey	One to one mapping with int cast
CASE WHEN ISNUMERIC (crm_party.party_code) = 1 THEN CAST (	crm_party.party_code	AS int) END	DimCustomer.CustomerCode	One to one mapping with int cast and isnumeric to prevent execution plan errors
CAST(	_contacts.title	AS nchar(3))	DimCustomer.Title	One to one mapping with nchar cast from Contact record
CAST(	_contacts.first_name	AS nvarchar(100))	DimCustomer.Firstname	One to one mapping with nvarchar cast from Contact record
CAST(	_contacts.initials	AS nchar(10))	DimCustomer.MiddleInitial	One to one mapping with nchar cast from Contact record
CAST(	_contacts.last_name	AS nvarchar(100))	DimCustomer.LastName	One to one mapping with nvarchar cast from Contact record
CAST(	crm_party.party_name	AS nvarchar(100))	DimCustomer.PartyName	One to one mapping with nvarchar cast
CAST(	crm_party.postal_addr_1	AS nvarchar(100))	DimCustomer.PostalAddressLine1	One to one mapping with nvarchar cast
CAST(	crm_party.postal_addr_2	AS nvarchar(50))	DimCustomer.PostalSuburb	One to one mapping with nvarchar cast
CAST(	crm_party.postal_post_code	AS nchar(4))	DimCustomer.PostalPostcode	One to one mapping with nchar cast
CAST(	crm_party.postal_addr_3	AS nchar(3))	DimCustomer.PostalState	One to one mapping with nchar cast often truncates
CAST(	crm_party.street_addr_1	AS nvarchar(100))	DimCustomer.ResidentialAddressLine1	One to one mapping with nvarchar cast
CAST(	crm_party.street_addr_2	AS nvarchar(50))	DimCustomer.ResidentialSuburb	One to one mapping with nvarchar cast
CAST(	crm_party.street_post_code	AS nchar(4))	DimCustomer.ResidentialPostcode	One to one mapping with nchar cast
CAST(	crm_party.street_addr_3	AS nchar(3))	DimCustomer.ResidentialState	One to one mapping with nchar cast often truncates
CAST(CONCAT(	"crm_party.std_code, crm_party.phone_no"	) AS nvarchar(24))	DimCustomer.PrimaryPhone	Concatenation and nvarchar cast
CAST(CASE	crm_party.primary_phone_type_id	WHEN '1' THEN 'Landline' WHEN '2' THEN 'Mobile' ELSE NULL END AS nchar(8))	DimCustomer.PrimaryPhoneType	Decode phone type into readable values
CAST(CONCAT(	crm_party.secondary_std_code	", crm_party.secondary_phone_no) AS nvarchar(24))"	DimCustomer.SecondaryPhone	Concatenation and nvarchar cast
CAST(CASE	crm_party.secondary_phone_type_id	WHEN '1' THEN 'Landline' WHEN '2' THEN 'Mobile' ELSE NULL END AS nchar(8))	DimCustomer.SecondaryPhoneType	Decode phone type into readable values
CAST(CASE WHEN LEFT(	crm_party.std_code	",2) = '04' THEN CONCAT(crm_party.std_code, crm_party.phone_no) WHEN LEFT(crm_party.secondary_std_code,2) = '04' THEN CONCAT(crm_party.secondary_std_code, crm_party.secondary_phone_no) ELSE NULL END AS nchar(10))"	DimCustomer.MobilePhone	Derives mobile phone number from primary phone or secondary phone else Unknown
CAST(	crm_party.email_address	AS nvarchar(100))	DimCustomer.Email	One to one mapping with nvarchar cast
	_contacts.date_of_birth		DimCustomer.DateOfBirth	One to one mapping from Contact record
CAST(CASE	crm_element_hierarchy.seq_element_type_id	WHEN '9' THEN 'Residential' WHEN '8' THEN 'Business' ELSE NULL END AS nchar(11))	DimCustomer.CustomerType	Decode customer type into readable values
CAST(CASE	_customerStatus.CustomerStatus	WHEN 1 THEN 'Active' ELSE 'Inactive' END AS nchar(8))	DimCustomer.CustomerStatus	Use WITH table to populate Customer Status
CAST(CASE	_ombudsmanComplaints.IsOmbudsman	WHEN 1 THEN 'Yes' ELSE 'No' END AS nchar(3))	DimCustomer.OmbudsmanComplaints	Use WITH table to populate Ombudsman Complaints
	crm_party.insert_datetime		DimCustomer.CreationDate	Insert datetime to populate Creation Date
CASE WHEN	_joinDate.EarliestVVDate	= '9999-12-31' THEN nc_client.insert_datetime ELSE _joinDate.EarliestVVDate END	DimCustomer.JoinDate	Use WITH table to populate Join Date
CASE	nc_client.promo_allowed	WHEN 'E' THEN 'Preferred contact by email' WHEN 'P' THEN 'Preferred contact by phone' WHEN 'Y' THEN 'Preferred contact by mail' ELSE NULL END	DimCustomer.PrivacyPreferredStatus	Decode promo allowed to privacy preferred status
SELECTION_CRITERIA	FROM [schema].nc_client INNER JOIN [schema].crm_party ON nc_client.seq_party_id = crm_party.seq_party_id INNER JOIN [schema].crm_element_hierarchy ON crm_element_hierarchy.element_id = crm_party.seq_party_id INNER JOIN contacts AS _contacts ON _contacts.parent_id = nc_client.seq_party_id INNER JOIN customerStatus AS _customerStatus ON _customerStatus.seq_party_id = nc_client.seq_party_id LEFT OUTER JOIN ombudsmanComplaints AS _ombudsmanComplaints ON _ombudsmanComplaints.ClientId = crm_party.party_code LEFT OUTER JOIN joinDate AS _joinDate ON _joinDate.seq_party_id = nc_client.seq_party_id WHERE crm_element_hierarchy.seq_element_type_id = '8'AND _contacts.RC = '1' AND (crm_party.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID OR nc_client.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID OR crm_element_hierarchy.Meta_LatestUpdate_TaskExecutionInstanceId > @LatestSuccessfulTaskExecutionInstanceID OR _customerStatus.Meta_HasChanged = 1 OR _ombudsmanComplaints.Meta_HasChanged = 1 OR _joinDate.Meta_HasChanged = 1)			
